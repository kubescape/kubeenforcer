name: "Release"
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches:
    - 'main'
  push:
    branches-ignore:
      - "**"
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      image-name: ${{ steps.image-name.outputs.IMAGE_NAME }}
      image-version: ${{ steps.image-version.outputs.IMAGE_VERSION }}
    steps:
      - name: Checkout repository
        id: checkout-repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: set-up-buildx
        uses: docker/setup-buildx-action@v2

      - name: Set image version
        id: image-version
        run: |
          git fetch --tags
          echo "IMAGE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          git describe --tags --abbrev=0

      - name: Set image name
        id: image-name
        run: echo 'IMAGE_NAME=quay.io/${{ github.repository_owner }}/kubeenforcer' >> $GITHUB_OUTPUT

      - name: Set up QEMU
        id: set-up-qemu
        uses: docker/setup-qemu-action@v2

      - name: Login to Quay.io
        id: login-to-quay
        env:
          QUAY_PASSWORD: ${{ secrets.QUAYIO_REGISTRY_PASSWORD }}
          QUAY_USERNAME: ${{ secrets.QUAYIO_REGISTRY_USERNAME }}
        run: docker login -u="${QUAY_USERNAME}" -p="${QUAY_PASSWORD}" quay.io

      - name: Set image name
        run: |
          echo "IMAGE_NAME: ${{ steps.image-name.outputs.IMAGE_NAME }}"
          echo "IMAGE_VERSION: ${{ steps.image-version.outputs.IMAGE_VERSION }}"

      - name: Build and push Docker image
        run: docker buildx build . --file ./Dockerfile --tag ${{ steps.image-name.outputs.IMAGE_NAME }}:${{ steps.image-version.outputs.IMAGE_VERSION }} --tag ${{ steps.image-name.outputs.IMAGE_NAME }}:latest --build-arg image_version=${{ steps.image-version.outputs.IMAGE_VERSION }} --build-arg client=image-release --push --platform linux/amd64,linux/arm64

